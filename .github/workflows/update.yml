name: Release New Version

on:
  schedule:
  - cron: '5 * * * *'  # GMT
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo ðŸ¤”
        uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Prepare Release ðŸ§ª
        id: prepare_release
        env:
          include_issue_notice: true
        run: |
          python ./.github/workflows/get_release_description.py

          echo "::set-output name=VERSION::$(python ./.github/workflows/update.py)"
          echo "::set-output name=RELEASE_TITLE::$(python ./.github/workflows/get_release_version.py)"

      - name: Update Addon
        uses: stefanzweifel/git-auto-commit-action@v4
        id: update_addon
        with:
          commit_message: Update the addon.

      - name: Draft Release
        id: draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.prepare_release.outputs.VERSION }}
          body_path: ../release_description.txt
          release_name: ${{ steps.prepare_release.outputs.RELEASE_TITLE }}
          draft: true
          commitish: main

      - name: Create Package ðŸ“¦
        id: create_package
        run: |
          dir=$(basename $(pwd))
          rm -r ./.git
          cd ..
          zip $dir.zip -r $dir
          echo "::set-output name=ZIP_DIR::../$dir.zip"
          echo "::set-output name=ZIP::$dir.zip"

      - name: Upload Package ðŸ“¦
        uses: actions/upload-release-asset@v1.0.1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         upload_url: ${{ steps.draft_release.outputs.upload_url }}
         asset_path: ${{ steps.create_package.outputs.ZIP_DIR }}
         asset_name: ${{ steps.create_package.outputs.ZIP }}
         asset_content_type: application/zip

      - name: Publish Release ðŸ¥³
        uses: eregon/publish-release@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         release_id: ${{ steps.draft_release.outputs.id }}

